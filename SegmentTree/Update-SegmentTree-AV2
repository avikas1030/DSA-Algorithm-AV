    int n;
    vector<int> segmentTree;

    void updateSegmentTree(int idx, int val, int i, int l, int r, vector<int>& nums) {
        if(l == r) {
            segmentTree[i] = val;
            return;
        }
        
        int mid = l + (r-l)/2;
        if(idx <= mid){
        updateSegmentTree(int idx, int val, 2*i+1, l, mid, nums);
        }
        else{
        updateSegmentTree(int idx, int val, 2*i+2, mid+1, r, nums);
        }
        segmentTree[i] = segmentTree[2*i + 1] + segmentTree[2*i + 2];
    }

    NumArray(vector<int>& nums) {
        n = nums.size();
        segmentTree.resize(4*n);
        updateSegmentTree(idx, val, 0, 0, n-1, nums);
    }
